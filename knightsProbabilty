public class Knight
{
    public static double probability(int x,int y,int n)
    {
        int boardSize=8;double count =0;
        //Define an 8X8 grid
        double[][] board=new double[boardSize][boardSize];
        //set the starting position
        board[x][y]=1.0;
        //possible moves
        int[][] moves=new int[][] {
                {-2,-1},{-2,1},{2,-1},{2,1},
                {-1,-2},{-1,2},{1,-2},{1,2}};
        int[][] moves1=new int[][] {
                {x,y},{x,y},{x,y},{x,y},
                {x,y},{x,y},{x,y},{x,y}};

        if(n==0){
            count =8;
        }else {
        for(int k=0;k<n;k++)
        {
            for(int i = 0; i<moves.length;i++) {

                moves1[i][0] = moves1[i][0] + moves[i][0];
                moves1[i][1] = moves1[i][1] + moves[i][1];
                if (moves1[i][0] > 0 && moves1[i][1] > 0) {
                    count = count + 1;
                }
            } }}
        return count*.125;
    }
    public static boolean doTestsPass()
    {
        boolean result=true;
        result=result && probability(0,0,0)==1.0;
        result=result && probability(3,3,1)==1.0;
        result=result && probability(0,0,1)==0.25;
        return result;
    }
    public static void main(String[] Rgs)
    {
        if(doTestsPass())
        {
            System.out.println("All tests pass");
        }
        else
        {
            System.out.println("There are test failures");
        }
    }
}
